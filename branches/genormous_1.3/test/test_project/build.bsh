/*
 * Copyright (c) 2007, Brian Hawkins
 * Permission is granted to use this code without restriction as long
 * as this copyright notice appears in all source files.
 */
 
import cpmake.*;
import cpmake.java.*;

print("===============================================================");

srcdir = "src";
ormdir = srcdir+"/genorm/test/orm";
blddir = "build";
jarfile = "genormtest.jar";
libdir = "../../lib";

make.setProperty(make.PROP_MULTI_THREAD_OUTPUT, "true");

libJarFiles = make.createFileList(libdir, ".*\\.jar", (make.INCLUDE_PATH | make.RECURSE));

classpath = new ClassPath(libJarFiles);
classpath.addPath("../../build/jar/genormous-1.1.jar");
jp = make.initPlugin(new JavaProgram(srcdir, blddir, jarfile, classpath));
jp.setManifest("manifest.txt");
jp.createRules();
jp.setDefaultTarget();
target = jp.getJarFileTarget();
jar = jp.getJarFile();
jar.addFiles("log4j.properties");


//-------------------------------------------------------------------
//==-- GENERATE ORM --==
make.createPhonyRule("genorm", null, "genOrm");
void genOrm(CPMakeRule rule)
	{
	make.exec("java -cp "+classpath+" genorm.Genormous -s tables.xml -d "+ormdir);
	}
	
//-------------------------------------------------------------------
//==-- GENERATE QUERIES --==
make.createPhonyRule("genquery", null, "genQuery");
void genQuery(CPMakeRule rule)
	{
	make.exec("java -cp "+classpath+" genorm.QueryGen -s queries.xml -d "+ormdir+" -p genorm.test.orm");
	}
	
//-------------------------------------------------------------------
//==-- GENERATE BOTH --==
make.createPhonyRule("generate", new String[] {"genorm"}, null);


//-------------------------------------------------------------------
//==-- TEST --==
make.createPhonyRule("test", target, "test");
void test(CPMakeRule rule)
	{
	print("Running test");
	classpath.addPath(target);
	make.exec("java -cp "+classpath+" genorm.test.Main");
	}	

//-------------------------------------------------------------------
//==-- COMPILE	 --==
make.createPhonyRule("compile", target, null);
